Cyclistic Case Study: Quarterly Data Exploration, 2021_Q4
Windows Functions, Aggregate Functions, Converting Data Types
*/

-- Select columns from Q4 data to preview

SELECT
  *
FROM
  `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
ORDER BY 
        ride_id DESC

###################################################################################
        -- Total Trips: Members vs Casual 
-- Looking at overall, annual member and casual rider totals

SELECT 
        TotalTrips,
        TotalMemberTrips,
        TotalCasualTrips,
        ROUND(TotalMemberTrips/TotalTrips,2)*100 AS MemberPercentage,
        ROUND(TotalCasualTrips/TotalTrips,2)*100 AS CasualPercentage
FROM 
        (
        SELECT
                COUNT(ride_id) AS TotalTrips,
                COUNTIF(member_casual = 'member') AS TotalMemberTrips,
                COUNTIF(member_casual = 'casual') AS TotalCasualTrips
        FROM
               `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        )

###################################################################################

-- Average Ride Lengths: Members vs Casual  
-- Using CTEs to calculate average ride lengths for overall, members, and casual riders

WITH RideLengths AS (
    SELECT 
        member_casual,
        EXTRACT(HOUR FROM ride_length) * 3600 + 
        EXTRACT(MINUTE FROM ride_length) * 60 + 
        EXTRACT(SECOND FROM ride_length) AS ride_length_seconds -- Convert TIME to seconds
    FROM 
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
)

SELECT
    AVG(ride_length_seconds) AS AvgRideLength_Overall,
    AVG(CASE WHEN member_casual = 'member' THEN ride_length_seconds END) AS AvgRideLength_Member,
    AVG(CASE WHEN member_casual = 'casual' THEN ride_length_seconds END) AS AvgRideLength_Casual
FROM 
    RideLengths;

--OR


-- Average Ride Lengths: Members vs Casual  
-- Looking at overall, member and casual average ride lengths

SELECT
        (
        SELECT 
                AVG (ride_length)
        FROM 
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        ) AS AvgRideLength_Overall,
        (
        SELECT 
                AVG(ride_length) 
        FROM 
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        WHERE 
                member_casual = 'member'
        ) AS AvgRideLength_Member,
        (
        SELECT 
                AVG(ride_length) 
        FROM 
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        WHERE 
                member_casual = 'casual'
        ) AS AvgRideLength_Casual

####################################################################################

-- Max Ride Lengths: Members vs Casual  
-- Looking at max ride lengths to check for outliers

SELECT 
        member_casual,
        MAX(ride_length) AS ride_length_MAX
FROM 
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
GROUP BY 
        member_casual
ORDER BY 
        ride_length_MAX DESC
LIMIT 
        2;

-- Select ride lengths for casual members
SELECT 
        member_casual,
        ride_length
FROM 
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
WHERE 
        member_casual = 'casual'
ORDER BY 
        ride_length DESC
LIMIT 
        100;

###########################################################################

-- Median Ride Lengths: Members vs Casual 
-- Looking at median because of outliers influence on AVG

SELECT
        DISTINCT median_ride_length,
        member_casual
FROM 
        (
        SELECT 
                ride_id,
                member_casual,
                ride_length,
                PERCENTILE_DISC(ride_length, 0.5 IGNORE NULLS) OVER(PARTITION BY member_casual) AS  median_ride_length
        FROM 
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        )
ORDER BY 
        median_ride_length DESC LIMIT 2

############################################################################

-- Rides per day: member and casual
-- Looking at which days have the highest number of rides

SELECT
        member_casual, 
        day_of_week AS mode_day_of_week -- Top number of day_of_week
FROM 
        (
        SELECT
                DISTINCT member_casual, day_of_week, ROW_NUMBER() OVER (PARTITION BY member_casual ORDER BY COUNT(day_of_week) DESC) rn
        FROM
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        GROUP BY
                member_casual, day_of_week
        )
WHERE
        rn = 1
ORDER BY
        member_casual DESC LIMIT 2

#######################################################################

-- Looking at average ride length per day of week

SELECT 
    day_of_week,
    AVG(EXTRACT(SECOND FROM ride_length) + 
        EXTRACT(MINUTE FROM ride_length) * 60 + 
        EXTRACT(HOUR FROM ride_length) * 3600) AS average_ride_length_seconds
FROM 
    `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
GROUP BY
    day_of_week
ORDER BY
    average_ride_length_seconds DESC 
LIMIT 10;

-- OR

-- Looking at average ride length per day of week

SELECT 
        day_of_week,
        AVG(ride_length) AS average_ride_length
FROM 
        (
        SELECT 
                member_casual,
                day_of_week,
                ride_length
        FROM
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        )
GROUP BY
        day_of_week
ORDER BY
        average_ride_length DESC LIMIT 10

##################################################################

-- How about the median ride length per day of week?

SELECT
        DISTINCT median_ride_length,
        day_of_week
FROM 
        (
        SELECT 
                ride_id,
                day_of_week,
                ride_length,
                PERCENTILE_DISC(ride_length, 0.5 IGNORE NULLS) OVER(PARTITION BY day_of_week) AS  median_ride_length
        FROM 
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        )
ORDER BY 
        median_ride_length DESC LIMIT 10

##################################################################

-- Looking at average ride length per day of week for casual and annual

SELECT 
    member_casual,
    day_of_week,
    AVG(EXTRACT(SECOND FROM ride_length) + 
        EXTRACT(MINUTE FROM ride_length) * 60 + 
        EXTRACT(HOUR FROM ride_length) * 3600) AS average_ride_length_seconds
FROM 
    `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
GROUP BY
    day_of_week,
    member_casual
ORDER BY
    average_ride_length_seconds DESC 
LIMIT 20;


------ OR



-- Looking at AVG ride length per day of week for casual and annual

SELECT 
        member_casual,
        day_of_week,
        AVG(ride_length) AS average_ride_length
FROM 
        (
        SELECT 
                member_casual,
                day_of_week,
                ride_length
        FROM
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        )
GROUP BY
        day_of_week,
        member_casual
ORDER BY
        average_ride_length DESC LIMIT 20

#################################################################

-- Looking at median ride lengths per day

SELECT
        DISTINCT median_ride_length,
        member_casual,
        day_of_week
FROM 
        (
        SELECT 
                ride_id,
                member_casual,
                day_of_week,
                ride_length,
                PERCENTILE_DISC(ride_length, 0.5 IGNORE NULLS) OVER(PARTITION BY day_of_week) AS  median_ride_length
        FROM 
                `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
        WHERE
                member_casual = 'member'
                -- member_casual = 'casual'
        )
ORDER BY 
        median_ride_length DESC LIMIT 20

################################################################

-- Overall trips per day
-- Looking at total number of trips per day_of_week

SELECT  
        day_of_week,
        COUNT(DISTINCT ride_id) AS TotalTrips
FROM
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
GROUP BY 
        day_of_week
ORDER BY 
        TotalTrips DESC LIMIT 50

################################################################

-- Overall, member, casual
-- Looking at total number of trips per day 

SELECT  
        day_of_week,
        COUNT(DISTINCT ride_id) AS TotalTrips,
        SUM(CASE WHEN member_casual = 'member' THEN 1 ELSE 0 END) AS MemberTrips,
        SUM(CASE WHEN member_casual = 'casual' THEN 1 ELSE 0 END) AS CasualTrips
FROM 
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
GROUP BY 
        1
ORDER BY 
        TotalTrips DESC LIMIT 50;

SELECT  
        day_of_week,
        COUNT(DISTINCT ride_id) AS TotalTrips
FROM
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
WHERE 
        member_casual = 'member'
        -- member_casual = 'casual'
GROUP BY 
        day_of_week
ORDER BY 
        TotalTrips DESC LIMIT 50

###############################################################################

-- Start stations: member vs casual
-- Looking at start station counts

SELECT 
        DISTINCT start_station_name,
        SUM(
            CASE WHEN ride_id = ride_id AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS total,
        SUM(
            CASE WHEN member_casual = 'member' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS member,
        SUM(
            CASE WHEN member_casual = 'casual' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS casual
FROM 
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`
GROUP BY 
        start_station_name
ORDER BY 
        total DESC
        -- member DESC
        -- casual DESC

######################################################################

-- Location data
-- Defining MIN and MAX values for latitude and longitude

SELECT  
        MAX(start_lat) AS start_lat_max,
        MIN(start_lat) AS start_lat_min,
        MAX(start_lng) AS start_lng_max,
        MIN(start_lng) AS start_lng_min,
        MAX(end_lat) AS end_lat_max,
        MIN(end_lat) AS end_lat_min,
        MAX(end_lng) AS end_lng_max,
        MIN(end_lng) AS end_lng_min
FROM
        `tripdata-429912.tripdata_quater_4.tripdata_quater_4`